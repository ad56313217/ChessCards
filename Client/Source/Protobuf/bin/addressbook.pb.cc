// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: addressbook.proto

#include "addressbook.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

//begin custom modify
#if defined(_MSC_VER)
#pragma warning(disable:4125)
#endif // _MSC_VER
//end custom modify
namespace ccg_pb {
class PlayerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerData>
      _instance;
} _PlayerData_default_instance_;
class login_namepasswordReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<login_namepasswordReq>
      _instance;
} _login_namepasswordReq_default_instance_;
class login_DeviceReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<login_DeviceReq>
      _instance;
} _login_DeviceReq_default_instance_;
class login_wechatReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<login_wechatReq>
      _instance;
} _login_wechatReq_default_instance_;
class login_ResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<login_Respone>
      _instance;
} _login_Respone_default_instance_;
class room_createReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<room_createReq>
      _instance;
} _room_createReq_default_instance_;
class room_createResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<room_createRespone>
      _instance;
} _room_createRespone_default_instance_;
class room_joinReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<room_joinReq>
      _instance;
} _room_joinReq_default_instance_;
class room_joinResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<room_joinRespone>
      _instance;
} _room_joinRespone_default_instance_;
class room_playerReadyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<room_playerReady>
      _instance;
} _room_playerReady_default_instance_;
class room_playerReadyResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<room_playerReadyRespone>
      _instance;
} _room_playerReadyRespone_default_instance_;
class room_gamestartResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<room_gamestartRespone>
      _instance;
} _room_gamestartRespone_default_instance_;
class pokerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<poker>
      _instance;
} _poker_default_instance_;
class callDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<call>
      _instance;
} _call_default_instance_;
class call_ResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<call_Respone>
      _instance;
} _call_Respone_default_instance_;
class call_begin_ResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<call_begin_Respone>
      _instance;
} _call_begin_Respone_default_instance_;
class pokeroutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pokerout>
      _instance;
} _pokerout_default_instance_;
class pokerout_ResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pokerout_Respone>
      _instance;
} _pokerout_Respone_default_instance_;
class gameend_ResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gameend_Respone>
      _instance;
} _gameend_Respone_default_instance_;
class chattextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<chattext>
      _instance;
} _chattext_default_instance_;
class chatemoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<chatemo>
      _instance;
} _chatemo_default_instance_;
class chatstringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<chatstring>
      _instance;
} _chatstring_default_instance_;
class chattext_ResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<chattext_Respone>
      _instance;
} _chattext_Respone_default_instance_;
class chatemo_ResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<chatemo_Respone>
      _instance;
} _chatemo_Respone_default_instance_;
class chatstring_ResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<chatstring_Respone>
      _instance;
} _chatstring_Respone_default_instance_;
}  // namespace ccg_pb
namespace protobuf_addressbook_2eproto {
void InitDefaultsPlayerDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_PlayerData_default_instance_;
    new (ptr) ::ccg_pb::PlayerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::PlayerData::InitAsDefaultInstance();
}

void InitDefaultsPlayerData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerDataImpl);
}

void InitDefaultslogin_namepasswordReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_login_namepasswordReq_default_instance_;
    new (ptr) ::ccg_pb::login_namepasswordReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::login_namepasswordReq::InitAsDefaultInstance();
}

void InitDefaultslogin_namepasswordReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultslogin_namepasswordReqImpl);
}

void InitDefaultslogin_DeviceReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_login_DeviceReq_default_instance_;
    new (ptr) ::ccg_pb::login_DeviceReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::login_DeviceReq::InitAsDefaultInstance();
}

void InitDefaultslogin_DeviceReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultslogin_DeviceReqImpl);
}

void InitDefaultslogin_wechatReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_login_wechatReq_default_instance_;
    new (ptr) ::ccg_pb::login_wechatReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::login_wechatReq::InitAsDefaultInstance();
}

void InitDefaultslogin_wechatReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultslogin_wechatReqImpl);
}

void InitDefaultslogin_ResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_login_Respone_default_instance_;
    new (ptr) ::ccg_pb::login_Respone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::login_Respone::InitAsDefaultInstance();
}

void InitDefaultslogin_Respone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultslogin_ResponeImpl);
}

void InitDefaultsroom_createReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_room_createReq_default_instance_;
    new (ptr) ::ccg_pb::room_createReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::room_createReq::InitAsDefaultInstance();
}

void InitDefaultsroom_createReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsroom_createReqImpl);
}

void InitDefaultsroom_createResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_room_createRespone_default_instance_;
    new (ptr) ::ccg_pb::room_createRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::room_createRespone::InitAsDefaultInstance();
}

void InitDefaultsroom_createRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsroom_createResponeImpl);
}

void InitDefaultsroom_joinReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_room_joinReq_default_instance_;
    new (ptr) ::ccg_pb::room_joinReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::room_joinReq::InitAsDefaultInstance();
}

void InitDefaultsroom_joinReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsroom_joinReqImpl);
}

void InitDefaultsroom_joinResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_addressbook_2eproto::InitDefaultsPlayerData();
  {
    void* ptr = &::ccg_pb::_room_joinRespone_default_instance_;
    new (ptr) ::ccg_pb::room_joinRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::room_joinRespone::InitAsDefaultInstance();
}

void InitDefaultsroom_joinRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsroom_joinResponeImpl);
}

void InitDefaultsroom_playerReadyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_room_playerReady_default_instance_;
    new (ptr) ::ccg_pb::room_playerReady();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::room_playerReady::InitAsDefaultInstance();
}

void InitDefaultsroom_playerReady() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsroom_playerReadyImpl);
}

void InitDefaultsroom_playerReadyResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_room_playerReadyRespone_default_instance_;
    new (ptr) ::ccg_pb::room_playerReadyRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::room_playerReadyRespone::InitAsDefaultInstance();
}

void InitDefaultsroom_playerReadyRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsroom_playerReadyResponeImpl);
}

void InitDefaultsroom_gamestartResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_addressbook_2eproto::InitDefaultspoker();
  {
    void* ptr = &::ccg_pb::_room_gamestartRespone_default_instance_;
    new (ptr) ::ccg_pb::room_gamestartRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::room_gamestartRespone::InitAsDefaultInstance();
}

void InitDefaultsroom_gamestartRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsroom_gamestartResponeImpl);
}

void InitDefaultspokerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_poker_default_instance_;
    new (ptr) ::ccg_pb::poker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::poker::InitAsDefaultInstance();
}

void InitDefaultspoker() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultspokerImpl);
}

void InitDefaultscallImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_call_default_instance_;
    new (ptr) ::ccg_pb::call();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::call::InitAsDefaultInstance();
}

void InitDefaultscall() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultscallImpl);
}

void InitDefaultscall_ResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_call_Respone_default_instance_;
    new (ptr) ::ccg_pb::call_Respone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::call_Respone::InitAsDefaultInstance();
}

void InitDefaultscall_Respone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultscall_ResponeImpl);
}

void InitDefaultscall_begin_ResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_call_begin_Respone_default_instance_;
    new (ptr) ::ccg_pb::call_begin_Respone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::call_begin_Respone::InitAsDefaultInstance();
}

void InitDefaultscall_begin_Respone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultscall_begin_ResponeImpl);
}

void InitDefaultspokeroutImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_addressbook_2eproto::InitDefaultspoker();
  {
    void* ptr = &::ccg_pb::_pokerout_default_instance_;
    new (ptr) ::ccg_pb::pokerout();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::pokerout::InitAsDefaultInstance();
}

void InitDefaultspokerout() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultspokeroutImpl);
}

void InitDefaultspokerout_ResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_addressbook_2eproto::InitDefaultspoker();
  {
    void* ptr = &::ccg_pb::_pokerout_Respone_default_instance_;
    new (ptr) ::ccg_pb::pokerout_Respone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::pokerout_Respone::InitAsDefaultInstance();
}

void InitDefaultspokerout_Respone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultspokerout_ResponeImpl);
}

void InitDefaultsgameend_ResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_gameend_Respone_default_instance_;
    new (ptr) ::ccg_pb::gameend_Respone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::gameend_Respone::InitAsDefaultInstance();
}

void InitDefaultsgameend_Respone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsgameend_ResponeImpl);
}

void InitDefaultschattextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_chattext_default_instance_;
    new (ptr) ::ccg_pb::chattext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::chattext::InitAsDefaultInstance();
}

void InitDefaultschattext() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultschattextImpl);
}

void InitDefaultschatemoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_chatemo_default_instance_;
    new (ptr) ::ccg_pb::chatemo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::chatemo::InitAsDefaultInstance();
}

void InitDefaultschatemo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultschatemoImpl);
}

void InitDefaultschatstringImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_chatstring_default_instance_;
    new (ptr) ::ccg_pb::chatstring();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::chatstring::InitAsDefaultInstance();
}

void InitDefaultschatstring() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultschatstringImpl);
}

void InitDefaultschattext_ResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_chattext_Respone_default_instance_;
    new (ptr) ::ccg_pb::chattext_Respone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::chattext_Respone::InitAsDefaultInstance();
}

void InitDefaultschattext_Respone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultschattext_ResponeImpl);
}

void InitDefaultschatemo_ResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_chatemo_Respone_default_instance_;
    new (ptr) ::ccg_pb::chatemo_Respone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::chatemo_Respone::InitAsDefaultInstance();
}

void InitDefaultschatemo_Respone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultschatemo_ResponeImpl);
}

void InitDefaultschatstring_ResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ccg_pb::_chatstring_Respone_default_instance_;
    new (ptr) ::ccg_pb::chatstring_Respone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ccg_pb::chatstring_Respone::InitAsDefaultInstance();
}

void InitDefaultschatstring_Respone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultschatstring_ResponeImpl);
}

::google::protobuf::Metadata file_level_metadata[25];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::PlayerData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::PlayerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::PlayerData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::PlayerData, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::PlayerData, headurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::PlayerData, status_),
  2,
  0,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_namepasswordReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_namepasswordReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_namepasswordReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_namepasswordReq, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_namepasswordReq, devicetype_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_DeviceReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_DeviceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_DeviceReq, udid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_DeviceReq, devicetype_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_wechatReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_wechatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_wechatReq, udid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_wechatReq, devicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_wechatReq, headurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_wechatReq, type_),
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_Respone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_Respone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_Respone, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_Respone, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::login_Respone, id_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_createReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_createReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_createReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_createReq, roomtype_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_createRespone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_createRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_createRespone, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_createRespone, roomid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_joinReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_joinReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_joinReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_joinReq, roomid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_joinRespone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_joinRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_joinRespone, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_joinRespone, pd_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_playerReady, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_playerReady, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_playerReady, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_playerReadyRespone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_playerReadyRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_playerReadyRespone, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_gamestartRespone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_gamestartRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_gamestartRespone, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::room_gamestartRespone, pk_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::poker, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::poker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::poker, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::poker, type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::call, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::call, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::call, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::call, num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::call_Respone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::call_Respone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::call_Respone, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::call_Respone, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::call_Respone, nextcallid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::call_begin_Respone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::call_begin_Respone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::call_begin_Respone, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::call_begin_Respone, num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::pokerout, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::pokerout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::pokerout, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::pokerout, pk_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::pokerout_Respone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::pokerout_Respone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::pokerout_Respone, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::pokerout_Respone, pk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::pokerout_Respone, nextid_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::gameend_Respone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::gameend_Respone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chattext, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chattext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chattext, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chattext, textid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatemo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatemo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatemo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatemo, emoid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatstring, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatstring, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatstring, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatstring, str_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chattext_Respone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chattext_Respone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chattext_Respone, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chattext_Respone, textid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatemo_Respone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatemo_Respone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatemo_Respone, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatemo_Respone, emoid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatstring_Respone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatstring_Respone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatstring_Respone, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ccg_pb::chatstring_Respone, str_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::ccg_pb::PlayerData)},
  { 13, 21, sizeof(::ccg_pb::login_namepasswordReq)},
  { 24, 31, sizeof(::ccg_pb::login_DeviceReq)},
  { 33, 42, sizeof(::ccg_pb::login_wechatReq)},
  { 46, 54, sizeof(::ccg_pb::login_Respone)},
  { 57, 64, sizeof(::ccg_pb::room_createReq)},
  { 66, 73, sizeof(::ccg_pb::room_createRespone)},
  { 75, 82, sizeof(::ccg_pb::room_joinReq)},
  { 84, 91, sizeof(::ccg_pb::room_joinRespone)},
  { 93, 99, sizeof(::ccg_pb::room_playerReady)},
  { 100, 106, sizeof(::ccg_pb::room_playerReadyRespone)},
  { 107, 114, sizeof(::ccg_pb::room_gamestartRespone)},
  { 116, 123, sizeof(::ccg_pb::poker)},
  { 125, 132, sizeof(::ccg_pb::call)},
  { 134, 142, sizeof(::ccg_pb::call_Respone)},
  { 145, 152, sizeof(::ccg_pb::call_begin_Respone)},
  { 154, 161, sizeof(::ccg_pb::pokerout)},
  { 163, 171, sizeof(::ccg_pb::pokerout_Respone)},
  { 174, 179, sizeof(::ccg_pb::gameend_Respone)},
  { 179, 186, sizeof(::ccg_pb::chattext)},
  { 188, 195, sizeof(::ccg_pb::chatemo)},
  { 197, 204, sizeof(::ccg_pb::chatstring)},
  { 206, 213, sizeof(::ccg_pb::chattext_Respone)},
  { 215, 222, sizeof(::ccg_pb::chatemo_Respone)},
  { 224, 231, sizeof(::ccg_pb::chatstring_Respone)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_PlayerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_login_namepasswordReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_login_DeviceReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_login_wechatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_login_Respone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_room_createReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_room_createRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_room_joinReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_room_joinRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_room_playerReady_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_room_playerReadyRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_room_gamestartRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_poker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_call_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_call_Respone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_call_begin_Respone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_pokerout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_pokerout_Respone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_gameend_Respone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_chattext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_chatemo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_chatstring_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_chattext_Respone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_chatemo_Respone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ccg_pb::_chatstring_Respone_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "addressbook.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 25);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021addressbook.proto\022\006ccg_pb\"G\n\nPlayerDat"
      "a\022\n\n\002id\030\001 \002(\005\022\014\n\004nick\030\002 \002(\t\022\017\n\007headurl\030\003"
      " \002(\t\022\016\n\006status\030\004 \002(\005\"K\n\025login_namepasswo"
      "rdReq\022\014\n\004name\030\001 \002(\t\022\020\n\010password\030\002 \002(\t\022\022\n"
      "\nDeviceType\030\003 \002(\005\"3\n\017login_DeviceReq\022\014\n\004"
      "udid\030\001 \002(\t\022\022\n\nDeviceType\030\002 \002(\005\"R\n\017login_"
      "wechatReq\022\014\n\004udid\030\001 \002(\t\022\022\n\nDeviceType\030\002 "
      "\002(\005\022\017\n\007headurl\030\003 \002(\t\022\014\n\004type\030\004 \002(\005\"7\n\rlo"
      "gin_Respone\022\014\n\004type\030\001 \002(\005\022\014\n\004nick\030\002 \002(\t\022"
      "\n\n\002id\030\003 \002(\005\".\n\016room_createReq\022\n\n\002id\030\001 \002("
      "\005\022\020\n\010roomtype\030\002 \002(\005\"7\n\022room_createRespon"
      "e\022\021\n\terrorcode\030\001 \002(\005\022\016\n\006roomid\030\002 \002(\005\"*\n\014"
      "room_joinReq\022\n\n\002id\030\001 \002(\005\022\016\n\006roomid\030\002 \002(\005"
      "\"E\n\020room_joinRespone\022\021\n\terrorcode\030\001 \002(\005\022"
      "\036\n\002pd\030\002 \003(\0132\022.ccg_pb.PlayerData\"\036\n\020room_"
      "playerReady\022\n\n\002id\030\001 \002(\005\"%\n\027room_playerRe"
      "adyRespone\022\n\n\002id\030\001 \002(\005\">\n\025room_gamestart"
      "Respone\022\n\n\002id\030\001 \002(\005\022\031\n\002pk\030\002 \003(\0132\r.ccg_pb"
      ".poker\"!\n\005poker\022\n\n\002id\030\001 \002(\005\022\014\n\004type\030\002 \002("
      "\005\"\037\n\004call\022\n\n\002id\030\001 \002(\005\022\013\n\003num\030\002 \002(\005\";\n\014ca"
      "ll_Respone\022\n\n\002id\030\001 \002(\005\022\013\n\003num\030\002 \002(\005\022\022\n\nn"
      "extcallid\030\003 \002(\005\"-\n\022call_begin_Respone\022\n\n"
      "\002id\030\001 \002(\005\022\013\n\003num\030\002 \002(\005\"1\n\010pokerout\022\n\n\002id"
      "\030\001 \002(\005\022\031\n\002pk\030\002 \003(\0132\r.ccg_pb.poker\"I\n\020pok"
      "erout_Respone\022\n\n\002id\030\001 \002(\005\022\031\n\002pk\030\002 \003(\0132\r."
      "ccg_pb.poker\022\016\n\006nextid\030\003 \002(\005\"\021\n\017gameend_"
      "Respone\"&\n\010chattext\022\n\n\002id\030\001 \002(\005\022\016\n\006texti"
      "d\030\002 \002(\005\"$\n\007chatemo\022\n\n\002id\030\001 \002(\005\022\r\n\005emoid\030"
      "\002 \002(\005\"%\n\nchatstring\022\n\n\002id\030\001 \002(\005\022\013\n\003str\030\002"
      " \002(\t\".\n\020chattext_Respone\022\n\n\002id\030\001 \002(\005\022\016\n\006"
      "textid\030\002 \002(\005\",\n\017chatemo_Respone\022\n\n\002id\030\001 "
      "\002(\005\022\r\n\005emoid\030\002 \002(\005\"-\n\022chatstring_Respone"
      "\022\n\n\002id\030\001 \002(\005\022\013\n\003str\030\002 \002(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1305);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "addressbook.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_addressbook_2eproto
namespace ccg_pb {

// ===================================================================

void PlayerData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerData::kIdFieldNumber;
const int PlayerData::kNickFieldNumber;
const int PlayerData::kHeadurlFieldNumber;
const int PlayerData::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerData::PlayerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultsPlayerData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.PlayerData)
}
PlayerData::PlayerData(const PlayerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  headurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_headurl()) {
    headurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headurl_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.PlayerData)
}

void PlayerData::SharedCtor() {
  _cached_size_ = 0;
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
}

PlayerData::~PlayerData() {
  // @@protoc_insertion_point(destructor:ccg_pb.PlayerData)
  SharedDtor();
}

void PlayerData::SharedDtor() {
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerData::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerData& PlayerData::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultsPlayerData();
  return *internal_default_instance();
}

PlayerData* PlayerData::New(::google::protobuf::Arena* arena) const {
  PlayerData* n = new PlayerData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerData::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.PlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!nick_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nick_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!headurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*headurl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&status_) -
        reinterpret_cast<char*>(&id_)) + sizeof(status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.PlayerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string nick = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nick().data(), static_cast<int>(this->nick().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ccg_pb.PlayerData.nick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string headurl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->headurl().data(), static_cast<int>(this->headurl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ccg_pb.PlayerData.headurl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.PlayerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.PlayerData)
  return false;
#undef DO_
}

void PlayerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.PlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string nick = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.PlayerData.nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nick(), output);
  }

  // required string headurl = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headurl().data(), static_cast<int>(this->headurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.PlayerData.headurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->headurl(), output);
  }

  // required int32 status = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.PlayerData)
}

::google::protobuf::uint8* PlayerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.PlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string nick = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.PlayerData.nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nick(), target);
  }

  // required string headurl = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headurl().data(), static_cast<int>(this->headurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.PlayerData.headurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->headurl(), target);
  }

  // required int32 status = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.PlayerData)
  return target;
}

size_t PlayerData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.PlayerData)
  size_t total_size = 0;

  if (has_nick()) {
    // required string nick = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick());
  }

  if (has_headurl()) {
    // required string headurl = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headurl());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_status()) {
    // required int32 status = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  return total_size;
}
size_t PlayerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.PlayerData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string nick = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick());

    // required string headurl = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headurl());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 status = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.PlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.PlayerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.PlayerData)
    MergeFrom(*source);
  }
}

void PlayerData::MergeFrom(const PlayerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.PlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nick();
      nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_headurl();
      headurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headurl_);
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.PlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerData::CopyFrom(const PlayerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.PlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void PlayerData::Swap(PlayerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerData::InternalSwap(PlayerData* other) {
  using std::swap;
  nick_.Swap(&other->nick_);
  headurl_.Swap(&other->headurl_);
  swap(id_, other->id_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerData::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void login_namepasswordReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int login_namepasswordReq::kNameFieldNumber;
const int login_namepasswordReq::kPasswordFieldNumber;
const int login_namepasswordReq::kDeviceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

login_namepasswordReq::login_namepasswordReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultslogin_namepasswordReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.login_namepasswordReq)
}
login_namepasswordReq::login_namepasswordReq(const login_namepasswordReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  devicetype_ = from.devicetype_;
  // @@protoc_insertion_point(copy_constructor:ccg_pb.login_namepasswordReq)
}

void login_namepasswordReq::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetype_ = 0;
}

login_namepasswordReq::~login_namepasswordReq() {
  // @@protoc_insertion_point(destructor:ccg_pb.login_namepasswordReq)
  SharedDtor();
}

void login_namepasswordReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void login_namepasswordReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* login_namepasswordReq::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const login_namepasswordReq& login_namepasswordReq::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultslogin_namepasswordReq();
  return *internal_default_instance();
}

login_namepasswordReq* login_namepasswordReq::New(::google::protobuf::Arena* arena) const {
  login_namepasswordReq* n = new login_namepasswordReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void login_namepasswordReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.login_namepasswordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  devicetype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool login_namepasswordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.login_namepasswordReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ccg_pb.login_namepasswordReq.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ccg_pb.login_namepasswordReq.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 DeviceType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_devicetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.login_namepasswordReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.login_namepasswordReq)
  return false;
#undef DO_
}

void login_namepasswordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.login_namepasswordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.login_namepasswordReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.login_namepasswordReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // required int32 DeviceType = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->devicetype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.login_namepasswordReq)
}

::google::protobuf::uint8* login_namepasswordReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.login_namepasswordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.login_namepasswordReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.login_namepasswordReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // required int32 DeviceType = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->devicetype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.login_namepasswordReq)
  return target;
}

size_t login_namepasswordReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.login_namepasswordReq)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  if (has_devicetype()) {
    // required int32 DeviceType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devicetype());
  }

  return total_size;
}
size_t login_namepasswordReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.login_namepasswordReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

    // required int32 DeviceType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devicetype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void login_namepasswordReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.login_namepasswordReq)
  GOOGLE_DCHECK_NE(&from, this);
  const login_namepasswordReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const login_namepasswordReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.login_namepasswordReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.login_namepasswordReq)
    MergeFrom(*source);
  }
}

void login_namepasswordReq::MergeFrom(const login_namepasswordReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.login_namepasswordReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      devicetype_ = from.devicetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void login_namepasswordReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.login_namepasswordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void login_namepasswordReq::CopyFrom(const login_namepasswordReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.login_namepasswordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool login_namepasswordReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void login_namepasswordReq::Swap(login_namepasswordReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void login_namepasswordReq::InternalSwap(login_namepasswordReq* other) {
  using std::swap;
  name_.Swap(&other->name_);
  password_.Swap(&other->password_);
  swap(devicetype_, other->devicetype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata login_namepasswordReq::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void login_DeviceReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int login_DeviceReq::kUdidFieldNumber;
const int login_DeviceReq::kDeviceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

login_DeviceReq::login_DeviceReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultslogin_DeviceReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.login_DeviceReq)
}
login_DeviceReq::login_DeviceReq(const login_DeviceReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  udid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_udid()) {
    udid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.udid_);
  }
  devicetype_ = from.devicetype_;
  // @@protoc_insertion_point(copy_constructor:ccg_pb.login_DeviceReq)
}

void login_DeviceReq::SharedCtor() {
  _cached_size_ = 0;
  udid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetype_ = 0;
}

login_DeviceReq::~login_DeviceReq() {
  // @@protoc_insertion_point(destructor:ccg_pb.login_DeviceReq)
  SharedDtor();
}

void login_DeviceReq::SharedDtor() {
  udid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void login_DeviceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* login_DeviceReq::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const login_DeviceReq& login_DeviceReq::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultslogin_DeviceReq();
  return *internal_default_instance();
}

login_DeviceReq* login_DeviceReq::New(::google::protobuf::Arena* arena) const {
  login_DeviceReq* n = new login_DeviceReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void login_DeviceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.login_DeviceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!udid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*udid_.UnsafeRawStringPointer())->clear();
  }
  devicetype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool login_DeviceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.login_DeviceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string udid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_udid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->udid().data(), static_cast<int>(this->udid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ccg_pb.login_DeviceReq.udid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 DeviceType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_devicetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.login_DeviceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.login_DeviceReq)
  return false;
#undef DO_
}

void login_DeviceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.login_DeviceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string udid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->udid().data(), static_cast<int>(this->udid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.login_DeviceReq.udid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->udid(), output);
  }

  // required int32 DeviceType = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->devicetype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.login_DeviceReq)
}

::google::protobuf::uint8* login_DeviceReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.login_DeviceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string udid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->udid().data(), static_cast<int>(this->udid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.login_DeviceReq.udid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->udid(), target);
  }

  // required int32 DeviceType = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->devicetype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.login_DeviceReq)
  return target;
}

size_t login_DeviceReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.login_DeviceReq)
  size_t total_size = 0;

  if (has_udid()) {
    // required string udid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->udid());
  }

  if (has_devicetype()) {
    // required int32 DeviceType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devicetype());
  }

  return total_size;
}
size_t login_DeviceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.login_DeviceReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string udid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->udid());

    // required int32 DeviceType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devicetype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void login_DeviceReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.login_DeviceReq)
  GOOGLE_DCHECK_NE(&from, this);
  const login_DeviceReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const login_DeviceReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.login_DeviceReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.login_DeviceReq)
    MergeFrom(*source);
  }
}

void login_DeviceReq::MergeFrom(const login_DeviceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.login_DeviceReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_udid();
      udid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.udid_);
    }
    if (cached_has_bits & 0x00000002u) {
      devicetype_ = from.devicetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void login_DeviceReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.login_DeviceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void login_DeviceReq::CopyFrom(const login_DeviceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.login_DeviceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool login_DeviceReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void login_DeviceReq::Swap(login_DeviceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void login_DeviceReq::InternalSwap(login_DeviceReq* other) {
  using std::swap;
  udid_.Swap(&other->udid_);
  swap(devicetype_, other->devicetype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata login_DeviceReq::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void login_wechatReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int login_wechatReq::kUdidFieldNumber;
const int login_wechatReq::kDeviceTypeFieldNumber;
const int login_wechatReq::kHeadurlFieldNumber;
const int login_wechatReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

login_wechatReq::login_wechatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultslogin_wechatReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.login_wechatReq)
}
login_wechatReq::login_wechatReq(const login_wechatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  udid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_udid()) {
    udid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.udid_);
  }
  headurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_headurl()) {
    headurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headurl_);
  }
  ::memcpy(&devicetype_, &from.devicetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&devicetype_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.login_wechatReq)
}

void login_wechatReq::SharedCtor() {
  _cached_size_ = 0;
  udid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&devicetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&devicetype_)) + sizeof(type_));
}

login_wechatReq::~login_wechatReq() {
  // @@protoc_insertion_point(destructor:ccg_pb.login_wechatReq)
  SharedDtor();
}

void login_wechatReq::SharedDtor() {
  udid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void login_wechatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* login_wechatReq::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const login_wechatReq& login_wechatReq::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultslogin_wechatReq();
  return *internal_default_instance();
}

login_wechatReq* login_wechatReq::New(::google::protobuf::Arena* arena) const {
  login_wechatReq* n = new login_wechatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void login_wechatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.login_wechatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!udid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*udid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!headurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*headurl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&devicetype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&devicetype_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool login_wechatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.login_wechatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string udid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_udid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->udid().data(), static_cast<int>(this->udid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ccg_pb.login_wechatReq.udid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 DeviceType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_devicetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string headurl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->headurl().data(), static_cast<int>(this->headurl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ccg_pb.login_wechatReq.headurl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.login_wechatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.login_wechatReq)
  return false;
#undef DO_
}

void login_wechatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.login_wechatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string udid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->udid().data(), static_cast<int>(this->udid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.login_wechatReq.udid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->udid(), output);
  }

  // required int32 DeviceType = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->devicetype(), output);
  }

  // required string headurl = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headurl().data(), static_cast<int>(this->headurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.login_wechatReq.headurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->headurl(), output);
  }

  // required int32 type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.login_wechatReq)
}

::google::protobuf::uint8* login_wechatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.login_wechatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string udid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->udid().data(), static_cast<int>(this->udid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.login_wechatReq.udid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->udid(), target);
  }

  // required int32 DeviceType = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->devicetype(), target);
  }

  // required string headurl = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headurl().data(), static_cast<int>(this->headurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.login_wechatReq.headurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->headurl(), target);
  }

  // required int32 type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.login_wechatReq)
  return target;
}

size_t login_wechatReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.login_wechatReq)
  size_t total_size = 0;

  if (has_udid()) {
    // required string udid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->udid());
  }

  if (has_headurl()) {
    // required string headurl = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headurl());
  }

  if (has_devicetype()) {
    // required int32 DeviceType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devicetype());
  }

  if (has_type()) {
    // required int32 type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
size_t login_wechatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.login_wechatReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string udid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->udid());

    // required string headurl = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headurl());

    // required int32 DeviceType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devicetype());

    // required int32 type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void login_wechatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.login_wechatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const login_wechatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const login_wechatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.login_wechatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.login_wechatReq)
    MergeFrom(*source);
  }
}

void login_wechatReq::MergeFrom(const login_wechatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.login_wechatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_udid();
      udid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.udid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_headurl();
      headurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headurl_);
    }
    if (cached_has_bits & 0x00000004u) {
      devicetype_ = from.devicetype_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void login_wechatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.login_wechatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void login_wechatReq::CopyFrom(const login_wechatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.login_wechatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool login_wechatReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void login_wechatReq::Swap(login_wechatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void login_wechatReq::InternalSwap(login_wechatReq* other) {
  using std::swap;
  udid_.Swap(&other->udid_);
  headurl_.Swap(&other->headurl_);
  swap(devicetype_, other->devicetype_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata login_wechatReq::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void login_Respone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int login_Respone::kTypeFieldNumber;
const int login_Respone::kNickFieldNumber;
const int login_Respone::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

login_Respone::login_Respone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultslogin_Respone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.login_Respone)
}
login_Respone::login_Respone(const login_Respone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&type_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.login_Respone)
}

void login_Respone::SharedCtor() {
  _cached_size_ = 0;
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&type_)) + sizeof(id_));
}

login_Respone::~login_Respone() {
  // @@protoc_insertion_point(destructor:ccg_pb.login_Respone)
  SharedDtor();
}

void login_Respone::SharedDtor() {
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void login_Respone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* login_Respone::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const login_Respone& login_Respone::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultslogin_Respone();
  return *internal_default_instance();
}

login_Respone* login_Respone::New(::google::protobuf::Arena* arena) const {
  login_Respone* n = new login_Respone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void login_Respone::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.login_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!nick_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*nick_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&type_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool login_Respone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.login_Respone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string nick = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nick().data(), static_cast<int>(this->nick().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ccg_pb.login_Respone.nick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.login_Respone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.login_Respone)
  return false;
#undef DO_
}

void login_Respone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.login_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required string nick = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.login_Respone.nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nick(), output);
  }

  // required int32 id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.login_Respone)
}

::google::protobuf::uint8* login_Respone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.login_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // required string nick = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.login_Respone.nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nick(), target);
  }

  // required int32 id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.login_Respone)
  return target;
}

size_t login_Respone::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.login_Respone)
  size_t total_size = 0;

  if (has_nick()) {
    // required string nick = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick());
  }

  if (has_type()) {
    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_id()) {
    // required int32 id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t login_Respone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.login_Respone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string nick = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick());

    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required int32 id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void login_Respone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.login_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  const login_Respone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const login_Respone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.login_Respone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.login_Respone)
    MergeFrom(*source);
  }
}

void login_Respone::MergeFrom(const login_Respone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.login_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nick();
      nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void login_Respone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.login_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void login_Respone::CopyFrom(const login_Respone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.login_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool login_Respone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void login_Respone::Swap(login_Respone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void login_Respone::InternalSwap(login_Respone* other) {
  using std::swap;
  nick_.Swap(&other->nick_);
  swap(type_, other->type_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata login_Respone::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void room_createReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int room_createReq::kIdFieldNumber;
const int room_createReq::kRoomtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

room_createReq::room_createReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultsroom_createReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.room_createReq)
}
room_createReq::room_createReq(const room_createReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomtype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(roomtype_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.room_createReq)
}

void room_createReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomtype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(roomtype_));
}

room_createReq::~room_createReq() {
  // @@protoc_insertion_point(destructor:ccg_pb.room_createReq)
  SharedDtor();
}

void room_createReq::SharedDtor() {
}

void room_createReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* room_createReq::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const room_createReq& room_createReq::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultsroom_createReq();
  return *internal_default_instance();
}

room_createReq* room_createReq::New(::google::protobuf::Arena* arena) const {
  room_createReq* n = new room_createReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void room_createReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.room_createReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&roomtype_) -
        reinterpret_cast<char*>(&id_)) + sizeof(roomtype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool room_createReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.room_createReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 roomtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_roomtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.room_createReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.room_createReq)
  return false;
#undef DO_
}

void room_createReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.room_createReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 roomtype = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roomtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.room_createReq)
}

::google::protobuf::uint8* room_createReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.room_createReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 roomtype = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roomtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.room_createReq)
  return target;
}

size_t room_createReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.room_createReq)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_roomtype()) {
    // required int32 roomtype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomtype());
  }

  return total_size;
}
size_t room_createReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.room_createReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 roomtype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomtype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void room_createReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.room_createReq)
  GOOGLE_DCHECK_NE(&from, this);
  const room_createReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const room_createReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.room_createReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.room_createReq)
    MergeFrom(*source);
  }
}

void room_createReq::MergeFrom(const room_createReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.room_createReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      roomtype_ = from.roomtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void room_createReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.room_createReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void room_createReq::CopyFrom(const room_createReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.room_createReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool room_createReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void room_createReq::Swap(room_createReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void room_createReq::InternalSwap(room_createReq* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(roomtype_, other->roomtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata room_createReq::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void room_createRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int room_createRespone::kErrorcodeFieldNumber;
const int room_createRespone::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

room_createRespone::room_createRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultsroom_createRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.room_createRespone)
}
room_createRespone::room_createRespone(const room_createRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&errorcode_, &from.errorcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&errorcode_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.room_createRespone)
}

void room_createRespone::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&errorcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&errorcode_)) + sizeof(roomid_));
}

room_createRespone::~room_createRespone() {
  // @@protoc_insertion_point(destructor:ccg_pb.room_createRespone)
  SharedDtor();
}

void room_createRespone::SharedDtor() {
}

void room_createRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* room_createRespone::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const room_createRespone& room_createRespone::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultsroom_createRespone();
  return *internal_default_instance();
}

room_createRespone* room_createRespone::New(::google::protobuf::Arena* arena) const {
  room_createRespone* n = new room_createRespone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void room_createRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.room_createRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&errorcode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&roomid_) -
        reinterpret_cast<char*>(&errorcode_)) + sizeof(roomid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool room_createRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.room_createRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.room_createRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.room_createRespone)
  return false;
#undef DO_
}

void room_createRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.room_createRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errorcode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // required int32 roomid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roomid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.room_createRespone)
}

::google::protobuf::uint8* room_createRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.room_createRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errorcode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // required int32 roomid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roomid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.room_createRespone)
  return target;
}

size_t room_createRespone::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.room_createRespone)
  size_t total_size = 0;

  if (has_errorcode()) {
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  if (has_roomid()) {
    // required int32 roomid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomid());
  }

  return total_size;
}
size_t room_createRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.room_createRespone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());

    // required int32 roomid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void room_createRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.room_createRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const room_createRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const room_createRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.room_createRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.room_createRespone)
    MergeFrom(*source);
  }
}

void room_createRespone::MergeFrom(const room_createRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.room_createRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      errorcode_ = from.errorcode_;
    }
    if (cached_has_bits & 0x00000002u) {
      roomid_ = from.roomid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void room_createRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.room_createRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void room_createRespone::CopyFrom(const room_createRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.room_createRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool room_createRespone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void room_createRespone::Swap(room_createRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void room_createRespone::InternalSwap(room_createRespone* other) {
  using std::swap;
  swap(errorcode_, other->errorcode_);
  swap(roomid_, other->roomid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata room_createRespone::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void room_joinReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int room_joinReq::kIdFieldNumber;
const int room_joinReq::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

room_joinReq::room_joinReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultsroom_joinReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.room_joinReq)
}
room_joinReq::room_joinReq(const room_joinReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.room_joinReq)
}

void room_joinReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(roomid_));
}

room_joinReq::~room_joinReq() {
  // @@protoc_insertion_point(destructor:ccg_pb.room_joinReq)
  SharedDtor();
}

void room_joinReq::SharedDtor() {
}

void room_joinReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* room_joinReq::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const room_joinReq& room_joinReq::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultsroom_joinReq();
  return *internal_default_instance();
}

room_joinReq* room_joinReq::New(::google::protobuf::Arena* arena) const {
  room_joinReq* n = new room_joinReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void room_joinReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.room_joinReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&roomid_) -
        reinterpret_cast<char*>(&id_)) + sizeof(roomid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool room_joinReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.room_joinReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.room_joinReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.room_joinReq)
  return false;
#undef DO_
}

void room_joinReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.room_joinReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 roomid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roomid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.room_joinReq)
}

::google::protobuf::uint8* room_joinReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.room_joinReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 roomid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roomid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.room_joinReq)
  return target;
}

size_t room_joinReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.room_joinReq)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_roomid()) {
    // required int32 roomid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomid());
  }

  return total_size;
}
size_t room_joinReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.room_joinReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 roomid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void room_joinReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.room_joinReq)
  GOOGLE_DCHECK_NE(&from, this);
  const room_joinReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const room_joinReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.room_joinReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.room_joinReq)
    MergeFrom(*source);
  }
}

void room_joinReq::MergeFrom(const room_joinReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.room_joinReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      roomid_ = from.roomid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void room_joinReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.room_joinReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void room_joinReq::CopyFrom(const room_joinReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.room_joinReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool room_joinReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void room_joinReq::Swap(room_joinReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void room_joinReq::InternalSwap(room_joinReq* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(roomid_, other->roomid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata room_joinReq::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void room_joinRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int room_joinRespone::kErrorcodeFieldNumber;
const int room_joinRespone::kPdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

room_joinRespone::room_joinRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultsroom_joinRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.room_joinRespone)
}
room_joinRespone::room_joinRespone(const room_joinRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pd_(from.pd_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:ccg_pb.room_joinRespone)
}

void room_joinRespone::SharedCtor() {
  _cached_size_ = 0;
  errorcode_ = 0;
}

room_joinRespone::~room_joinRespone() {
  // @@protoc_insertion_point(destructor:ccg_pb.room_joinRespone)
  SharedDtor();
}

void room_joinRespone::SharedDtor() {
}

void room_joinRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* room_joinRespone::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const room_joinRespone& room_joinRespone::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultsroom_joinRespone();
  return *internal_default_instance();
}

room_joinRespone* room_joinRespone::New(::google::protobuf::Arena* arena) const {
  room_joinRespone* n = new room_joinRespone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void room_joinRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.room_joinRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pd_.Clear();
  errorcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool room_joinRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.room_joinRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ccg_pb.PlayerData pd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.room_joinRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.room_joinRespone)
  return false;
#undef DO_
}

void room_joinRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.room_joinRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errorcode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // repeated .ccg_pb.PlayerData pd = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pd_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pd(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.room_joinRespone)
}

::google::protobuf::uint8* room_joinRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.room_joinRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errorcode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // repeated .ccg_pb.PlayerData pd = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pd_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pd(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.room_joinRespone)
  return target;
}

size_t room_joinRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.room_joinRespone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }
  // repeated .ccg_pb.PlayerData pd = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pd_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pd(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void room_joinRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.room_joinRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const room_joinRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const room_joinRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.room_joinRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.room_joinRespone)
    MergeFrom(*source);
  }
}

void room_joinRespone::MergeFrom(const room_joinRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.room_joinRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pd_.MergeFrom(from.pd_);
  if (from.has_errorcode()) {
    set_errorcode(from.errorcode());
  }
}

void room_joinRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.room_joinRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void room_joinRespone::CopyFrom(const room_joinRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.room_joinRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool room_joinRespone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->pd())) return false;
  return true;
}

void room_joinRespone::Swap(room_joinRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void room_joinRespone::InternalSwap(room_joinRespone* other) {
  using std::swap;
  pd_.InternalSwap(&other->pd_);
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata room_joinRespone::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void room_playerReady::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int room_playerReady::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

room_playerReady::room_playerReady()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultsroom_playerReady();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.room_playerReady)
}
room_playerReady::room_playerReady(const room_playerReady& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ccg_pb.room_playerReady)
}

void room_playerReady::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
}

room_playerReady::~room_playerReady() {
  // @@protoc_insertion_point(destructor:ccg_pb.room_playerReady)
  SharedDtor();
}

void room_playerReady::SharedDtor() {
}

void room_playerReady::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* room_playerReady::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const room_playerReady& room_playerReady::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultsroom_playerReady();
  return *internal_default_instance();
}

room_playerReady* room_playerReady::New(::google::protobuf::Arena* arena) const {
  room_playerReady* n = new room_playerReady;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void room_playerReady::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.room_playerReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool room_playerReady::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.room_playerReady)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.room_playerReady)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.room_playerReady)
  return false;
#undef DO_
}

void room_playerReady::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.room_playerReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.room_playerReady)
}

::google::protobuf::uint8* room_playerReady::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.room_playerReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.room_playerReady)
  return target;
}

size_t room_playerReady::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.room_playerReady)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void room_playerReady::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.room_playerReady)
  GOOGLE_DCHECK_NE(&from, this);
  const room_playerReady* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const room_playerReady>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.room_playerReady)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.room_playerReady)
    MergeFrom(*source);
  }
}

void room_playerReady::MergeFrom(const room_playerReady& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.room_playerReady)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void room_playerReady::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.room_playerReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void room_playerReady::CopyFrom(const room_playerReady& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.room_playerReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool room_playerReady::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void room_playerReady::Swap(room_playerReady* other) {
  if (other == this) return;
  InternalSwap(other);
}
void room_playerReady::InternalSwap(room_playerReady* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata room_playerReady::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void room_playerReadyRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int room_playerReadyRespone::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

room_playerReadyRespone::room_playerReadyRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultsroom_playerReadyRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.room_playerReadyRespone)
}
room_playerReadyRespone::room_playerReadyRespone(const room_playerReadyRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ccg_pb.room_playerReadyRespone)
}

void room_playerReadyRespone::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
}

room_playerReadyRespone::~room_playerReadyRespone() {
  // @@protoc_insertion_point(destructor:ccg_pb.room_playerReadyRespone)
  SharedDtor();
}

void room_playerReadyRespone::SharedDtor() {
}

void room_playerReadyRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* room_playerReadyRespone::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const room_playerReadyRespone& room_playerReadyRespone::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultsroom_playerReadyRespone();
  return *internal_default_instance();
}

room_playerReadyRespone* room_playerReadyRespone::New(::google::protobuf::Arena* arena) const {
  room_playerReadyRespone* n = new room_playerReadyRespone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void room_playerReadyRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.room_playerReadyRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool room_playerReadyRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.room_playerReadyRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.room_playerReadyRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.room_playerReadyRespone)
  return false;
#undef DO_
}

void room_playerReadyRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.room_playerReadyRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.room_playerReadyRespone)
}

::google::protobuf::uint8* room_playerReadyRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.room_playerReadyRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.room_playerReadyRespone)
  return target;
}

size_t room_playerReadyRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.room_playerReadyRespone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void room_playerReadyRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.room_playerReadyRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const room_playerReadyRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const room_playerReadyRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.room_playerReadyRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.room_playerReadyRespone)
    MergeFrom(*source);
  }
}

void room_playerReadyRespone::MergeFrom(const room_playerReadyRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.room_playerReadyRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void room_playerReadyRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.room_playerReadyRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void room_playerReadyRespone::CopyFrom(const room_playerReadyRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.room_playerReadyRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool room_playerReadyRespone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void room_playerReadyRespone::Swap(room_playerReadyRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void room_playerReadyRespone::InternalSwap(room_playerReadyRespone* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata room_playerReadyRespone::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void room_gamestartRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int room_gamestartRespone::kIdFieldNumber;
const int room_gamestartRespone::kPkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

room_gamestartRespone::room_gamestartRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultsroom_gamestartRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.room_gamestartRespone)
}
room_gamestartRespone::room_gamestartRespone(const room_gamestartRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pk_(from.pk_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ccg_pb.room_gamestartRespone)
}

void room_gamestartRespone::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
}

room_gamestartRespone::~room_gamestartRespone() {
  // @@protoc_insertion_point(destructor:ccg_pb.room_gamestartRespone)
  SharedDtor();
}

void room_gamestartRespone::SharedDtor() {
}

void room_gamestartRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* room_gamestartRespone::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const room_gamestartRespone& room_gamestartRespone::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultsroom_gamestartRespone();
  return *internal_default_instance();
}

room_gamestartRespone* room_gamestartRespone::New(::google::protobuf::Arena* arena) const {
  room_gamestartRespone* n = new room_gamestartRespone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void room_gamestartRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.room_gamestartRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pk_.Clear();
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool room_gamestartRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.room_gamestartRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ccg_pb.poker pk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.room_gamestartRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.room_gamestartRespone)
  return false;
#undef DO_
}

void room_gamestartRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.room_gamestartRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .ccg_pb.poker pk = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pk_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pk(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.room_gamestartRespone)
}

::google::protobuf::uint8* room_gamestartRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.room_gamestartRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .ccg_pb.poker pk = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pk_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pk(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.room_gamestartRespone)
  return target;
}

size_t room_gamestartRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.room_gamestartRespone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  // repeated .ccg_pb.poker pk = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pk_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pk(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void room_gamestartRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.room_gamestartRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const room_gamestartRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const room_gamestartRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.room_gamestartRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.room_gamestartRespone)
    MergeFrom(*source);
  }
}

void room_gamestartRespone::MergeFrom(const room_gamestartRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.room_gamestartRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pk_.MergeFrom(from.pk_);
  if (from.has_id()) {
    set_id(from.id());
  }
}

void room_gamestartRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.room_gamestartRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void room_gamestartRespone::CopyFrom(const room_gamestartRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.room_gamestartRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool room_gamestartRespone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->pk())) return false;
  return true;
}

void room_gamestartRespone::Swap(room_gamestartRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void room_gamestartRespone::InternalSwap(room_gamestartRespone* other) {
  using std::swap;
  pk_.InternalSwap(&other->pk_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata room_gamestartRespone::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void poker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int poker::kIdFieldNumber;
const int poker::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

poker::poker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultspoker();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.poker)
}
poker::poker(const poker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.poker)
}

void poker::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

poker::~poker() {
  // @@protoc_insertion_point(destructor:ccg_pb.poker)
  SharedDtor();
}

void poker::SharedDtor() {
}

void poker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* poker::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const poker& poker::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultspoker();
  return *internal_default_instance();
}

poker* poker::New(::google::protobuf::Arena* arena) const {
  poker* n = new poker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void poker::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.poker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&id_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool poker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.poker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.poker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.poker)
  return false;
#undef DO_
}

void poker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.poker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.poker)
}

::google::protobuf::uint8* poker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.poker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.poker)
  return target;
}

size_t poker::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.poker)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
size_t poker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.poker)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void poker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.poker)
  GOOGLE_DCHECK_NE(&from, this);
  const poker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const poker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.poker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.poker)
    MergeFrom(*source);
  }
}

void poker::MergeFrom(const poker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.poker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void poker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.poker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void poker::CopyFrom(const poker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.poker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool poker::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void poker::Swap(poker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void poker::InternalSwap(poker* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata poker::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void call::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int call::kIdFieldNumber;
const int call::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

call::call()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultscall();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.call)
}
call::call(const call& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.call)
}

void call::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
}

call::~call() {
  // @@protoc_insertion_point(destructor:ccg_pb.call)
  SharedDtor();
}

void call::SharedDtor() {
}

void call::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* call::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const call& call::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultscall();
  return *internal_default_instance();
}

call* call::New(::google::protobuf::Arena* arena) const {
  call* n = new call;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void call::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_) -
        reinterpret_cast<char*>(&id_)) + sizeof(num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool call::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.call)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.call)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.call)
  return false;
#undef DO_
}

void call::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.call)
}

::google::protobuf::uint8* call::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.call)
  return target;
}

size_t call::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.call)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_num()) {
    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  return total_size;
}
size_t call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.call)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void call::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.call)
  GOOGLE_DCHECK_NE(&from, this);
  const call* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const call>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.call)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.call)
    MergeFrom(*source);
  }
}

void call::MergeFrom(const call& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.call)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void call::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void call::CopyFrom(const call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool call::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void call::Swap(call* other) {
  if (other == this) return;
  InternalSwap(other);
}
void call::InternalSwap(call* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(num_, other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata call::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void call_Respone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int call_Respone::kIdFieldNumber;
const int call_Respone::kNumFieldNumber;
const int call_Respone::kNextcallidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

call_Respone::call_Respone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultscall_Respone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.call_Respone)
}
call_Respone::call_Respone(const call_Respone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&nextcallid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(nextcallid_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.call_Respone)
}

void call_Respone::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nextcallid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(nextcallid_));
}

call_Respone::~call_Respone() {
  // @@protoc_insertion_point(destructor:ccg_pb.call_Respone)
  SharedDtor();
}

void call_Respone::SharedDtor() {
}

void call_Respone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* call_Respone::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const call_Respone& call_Respone::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultscall_Respone();
  return *internal_default_instance();
}

call_Respone* call_Respone::New(::google::protobuf::Arena* arena) const {
  call_Respone* n = new call_Respone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void call_Respone::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.call_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nextcallid_) -
        reinterpret_cast<char*>(&id_)) + sizeof(nextcallid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool call_Respone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.call_Respone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 nextcallid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_nextcallid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextcallid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.call_Respone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.call_Respone)
  return false;
#undef DO_
}

void call_Respone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.call_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  // required int32 nextcallid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nextcallid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.call_Respone)
}

::google::protobuf::uint8* call_Respone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.call_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  // required int32 nextcallid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nextcallid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.call_Respone)
  return target;
}

size_t call_Respone::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.call_Respone)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_num()) {
    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  if (has_nextcallid()) {
    // required int32 nextcallid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nextcallid());
  }

  return total_size;
}
size_t call_Respone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.call_Respone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());

    // required int32 nextcallid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nextcallid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void call_Respone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.call_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  const call_Respone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const call_Respone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.call_Respone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.call_Respone)
    MergeFrom(*source);
  }
}

void call_Respone::MergeFrom(const call_Respone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.call_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000004u) {
      nextcallid_ = from.nextcallid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void call_Respone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.call_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void call_Respone::CopyFrom(const call_Respone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.call_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool call_Respone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void call_Respone::Swap(call_Respone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void call_Respone::InternalSwap(call_Respone* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(num_, other->num_);
  swap(nextcallid_, other->nextcallid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata call_Respone::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void call_begin_Respone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int call_begin_Respone::kIdFieldNumber;
const int call_begin_Respone::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

call_begin_Respone::call_begin_Respone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultscall_begin_Respone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.call_begin_Respone)
}
call_begin_Respone::call_begin_Respone(const call_begin_Respone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.call_begin_Respone)
}

void call_begin_Respone::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
}

call_begin_Respone::~call_begin_Respone() {
  // @@protoc_insertion_point(destructor:ccg_pb.call_begin_Respone)
  SharedDtor();
}

void call_begin_Respone::SharedDtor() {
}

void call_begin_Respone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* call_begin_Respone::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const call_begin_Respone& call_begin_Respone::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultscall_begin_Respone();
  return *internal_default_instance();
}

call_begin_Respone* call_begin_Respone::New(::google::protobuf::Arena* arena) const {
  call_begin_Respone* n = new call_begin_Respone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void call_begin_Respone::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.call_begin_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_) -
        reinterpret_cast<char*>(&id_)) + sizeof(num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool call_begin_Respone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.call_begin_Respone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.call_begin_Respone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.call_begin_Respone)
  return false;
#undef DO_
}

void call_begin_Respone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.call_begin_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.call_begin_Respone)
}

::google::protobuf::uint8* call_begin_Respone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.call_begin_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.call_begin_Respone)
  return target;
}

size_t call_begin_Respone::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.call_begin_Respone)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_num()) {
    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  return total_size;
}
size_t call_begin_Respone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.call_begin_Respone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void call_begin_Respone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.call_begin_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  const call_begin_Respone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const call_begin_Respone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.call_begin_Respone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.call_begin_Respone)
    MergeFrom(*source);
  }
}

void call_begin_Respone::MergeFrom(const call_begin_Respone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.call_begin_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void call_begin_Respone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.call_begin_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void call_begin_Respone::CopyFrom(const call_begin_Respone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.call_begin_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool call_begin_Respone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void call_begin_Respone::Swap(call_begin_Respone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void call_begin_Respone::InternalSwap(call_begin_Respone* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(num_, other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata call_begin_Respone::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pokerout::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pokerout::kIdFieldNumber;
const int pokerout::kPkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pokerout::pokerout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultspokerout();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.pokerout)
}
pokerout::pokerout(const pokerout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pk_(from.pk_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ccg_pb.pokerout)
}

void pokerout::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
}

pokerout::~pokerout() {
  // @@protoc_insertion_point(destructor:ccg_pb.pokerout)
  SharedDtor();
}

void pokerout::SharedDtor() {
}

void pokerout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pokerout::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pokerout& pokerout::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultspokerout();
  return *internal_default_instance();
}

pokerout* pokerout::New(::google::protobuf::Arena* arena) const {
  pokerout* n = new pokerout;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void pokerout::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.pokerout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pk_.Clear();
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool pokerout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.pokerout)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ccg_pb.poker pk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.pokerout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.pokerout)
  return false;
#undef DO_
}

void pokerout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.pokerout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .ccg_pb.poker pk = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pk_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pk(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.pokerout)
}

::google::protobuf::uint8* pokerout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.pokerout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .ccg_pb.poker pk = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pk_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pk(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.pokerout)
  return target;
}

size_t pokerout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.pokerout)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  // repeated .ccg_pb.poker pk = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pk_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pk(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pokerout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.pokerout)
  GOOGLE_DCHECK_NE(&from, this);
  const pokerout* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pokerout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.pokerout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.pokerout)
    MergeFrom(*source);
  }
}

void pokerout::MergeFrom(const pokerout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.pokerout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pk_.MergeFrom(from.pk_);
  if (from.has_id()) {
    set_id(from.id());
  }
}

void pokerout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.pokerout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pokerout::CopyFrom(const pokerout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.pokerout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pokerout::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->pk())) return false;
  return true;
}

void pokerout::Swap(pokerout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pokerout::InternalSwap(pokerout* other) {
  using std::swap;
  pk_.InternalSwap(&other->pk_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata pokerout::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pokerout_Respone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pokerout_Respone::kIdFieldNumber;
const int pokerout_Respone::kPkFieldNumber;
const int pokerout_Respone::kNextidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pokerout_Respone::pokerout_Respone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultspokerout_Respone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.pokerout_Respone)
}
pokerout_Respone::pokerout_Respone(const pokerout_Respone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pk_(from.pk_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&nextid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(nextid_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.pokerout_Respone)
}

void pokerout_Respone::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nextid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(nextid_));
}

pokerout_Respone::~pokerout_Respone() {
  // @@protoc_insertion_point(destructor:ccg_pb.pokerout_Respone)
  SharedDtor();
}

void pokerout_Respone::SharedDtor() {
}

void pokerout_Respone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pokerout_Respone::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pokerout_Respone& pokerout_Respone::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultspokerout_Respone();
  return *internal_default_instance();
}

pokerout_Respone* pokerout_Respone::New(::google::protobuf::Arena* arena) const {
  pokerout_Respone* n = new pokerout_Respone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void pokerout_Respone::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.pokerout_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pk_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nextid_) -
        reinterpret_cast<char*>(&id_)) + sizeof(nextid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool pokerout_Respone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.pokerout_Respone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ccg_pb.poker pk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 nextid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_nextid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.pokerout_Respone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.pokerout_Respone)
  return false;
#undef DO_
}

void pokerout_Respone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.pokerout_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .ccg_pb.poker pk = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pk_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pk(static_cast<int>(i)), output);
  }

  // required int32 nextid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nextid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.pokerout_Respone)
}

::google::protobuf::uint8* pokerout_Respone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.pokerout_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .ccg_pb.poker pk = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pk_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pk(static_cast<int>(i)), deterministic, target);
  }

  // required int32 nextid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nextid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.pokerout_Respone)
  return target;
}

size_t pokerout_Respone::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.pokerout_Respone)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_nextid()) {
    // required int32 nextid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nextid());
  }

  return total_size;
}
size_t pokerout_Respone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.pokerout_Respone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 nextid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nextid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .ccg_pb.poker pk = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pk_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pk(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pokerout_Respone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.pokerout_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  const pokerout_Respone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pokerout_Respone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.pokerout_Respone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.pokerout_Respone)
    MergeFrom(*source);
  }
}

void pokerout_Respone::MergeFrom(const pokerout_Respone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.pokerout_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pk_.MergeFrom(from.pk_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      nextid_ = from.nextid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void pokerout_Respone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.pokerout_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pokerout_Respone::CopyFrom(const pokerout_Respone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.pokerout_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pokerout_Respone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->pk())) return false;
  return true;
}

void pokerout_Respone::Swap(pokerout_Respone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pokerout_Respone::InternalSwap(pokerout_Respone* other) {
  using std::swap;
  pk_.InternalSwap(&other->pk_);
  swap(id_, other->id_);
  swap(nextid_, other->nextid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata pokerout_Respone::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gameend_Respone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gameend_Respone::gameend_Respone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultsgameend_Respone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.gameend_Respone)
}
gameend_Respone::gameend_Respone(const gameend_Respone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ccg_pb.gameend_Respone)
}

void gameend_Respone::SharedCtor() {
  _cached_size_ = 0;
}

gameend_Respone::~gameend_Respone() {
  // @@protoc_insertion_point(destructor:ccg_pb.gameend_Respone)
  SharedDtor();
}

void gameend_Respone::SharedDtor() {
}

void gameend_Respone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* gameend_Respone::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gameend_Respone& gameend_Respone::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultsgameend_Respone();
  return *internal_default_instance();
}

gameend_Respone* gameend_Respone::New(::google::protobuf::Arena* arena) const {
  gameend_Respone* n = new gameend_Respone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void gameend_Respone::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.gameend_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gameend_Respone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.gameend_Respone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.gameend_Respone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.gameend_Respone)
  return false;
#undef DO_
}

void gameend_Respone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.gameend_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.gameend_Respone)
}

::google::protobuf::uint8* gameend_Respone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.gameend_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.gameend_Respone)
  return target;
}

size_t gameend_Respone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.gameend_Respone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void gameend_Respone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.gameend_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  const gameend_Respone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gameend_Respone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.gameend_Respone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.gameend_Respone)
    MergeFrom(*source);
  }
}

void gameend_Respone::MergeFrom(const gameend_Respone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.gameend_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void gameend_Respone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.gameend_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gameend_Respone::CopyFrom(const gameend_Respone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.gameend_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gameend_Respone::IsInitialized() const {
  return true;
}

void gameend_Respone::Swap(gameend_Respone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gameend_Respone::InternalSwap(gameend_Respone* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata gameend_Respone::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void chattext::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int chattext::kIdFieldNumber;
const int chattext::kTextidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

chattext::chattext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultschattext();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.chattext)
}
chattext::chattext(const chattext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&textid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(textid_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.chattext)
}

void chattext::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&textid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(textid_));
}

chattext::~chattext() {
  // @@protoc_insertion_point(destructor:ccg_pb.chattext)
  SharedDtor();
}

void chattext::SharedDtor() {
}

void chattext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* chattext::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const chattext& chattext::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultschattext();
  return *internal_default_instance();
}

chattext* chattext::New(::google::protobuf::Arena* arena) const {
  chattext* n = new chattext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void chattext::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.chattext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&textid_) -
        reinterpret_cast<char*>(&id_)) + sizeof(textid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool chattext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.chattext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 textid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_textid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &textid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.chattext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.chattext)
  return false;
#undef DO_
}

void chattext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.chattext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 textid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->textid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.chattext)
}

::google::protobuf::uint8* chattext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.chattext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 textid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->textid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.chattext)
  return target;
}

size_t chattext::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.chattext)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_textid()) {
    // required int32 textid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->textid());
  }

  return total_size;
}
size_t chattext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.chattext)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 textid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->textid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void chattext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.chattext)
  GOOGLE_DCHECK_NE(&from, this);
  const chattext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const chattext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.chattext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.chattext)
    MergeFrom(*source);
  }
}

void chattext::MergeFrom(const chattext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.chattext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      textid_ = from.textid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void chattext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.chattext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void chattext::CopyFrom(const chattext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.chattext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool chattext::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void chattext::Swap(chattext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void chattext::InternalSwap(chattext* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(textid_, other->textid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata chattext::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void chatemo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int chatemo::kIdFieldNumber;
const int chatemo::kEmoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

chatemo::chatemo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultschatemo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.chatemo)
}
chatemo::chatemo(const chatemo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&emoid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(emoid_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.chatemo)
}

void chatemo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&emoid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(emoid_));
}

chatemo::~chatemo() {
  // @@protoc_insertion_point(destructor:ccg_pb.chatemo)
  SharedDtor();
}

void chatemo::SharedDtor() {
}

void chatemo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* chatemo::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const chatemo& chatemo::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultschatemo();
  return *internal_default_instance();
}

chatemo* chatemo::New(::google::protobuf::Arena* arena) const {
  chatemo* n = new chatemo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void chatemo::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.chatemo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&emoid_) -
        reinterpret_cast<char*>(&id_)) + sizeof(emoid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool chatemo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.chatemo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 emoid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_emoid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &emoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.chatemo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.chatemo)
  return false;
#undef DO_
}

void chatemo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.chatemo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 emoid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->emoid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.chatemo)
}

::google::protobuf::uint8* chatemo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.chatemo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 emoid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->emoid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.chatemo)
  return target;
}

size_t chatemo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.chatemo)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_emoid()) {
    // required int32 emoid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->emoid());
  }

  return total_size;
}
size_t chatemo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.chatemo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 emoid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->emoid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void chatemo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.chatemo)
  GOOGLE_DCHECK_NE(&from, this);
  const chatemo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const chatemo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.chatemo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.chatemo)
    MergeFrom(*source);
  }
}

void chatemo::MergeFrom(const chatemo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.chatemo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      emoid_ = from.emoid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void chatemo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.chatemo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void chatemo::CopyFrom(const chatemo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.chatemo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool chatemo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void chatemo::Swap(chatemo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void chatemo::InternalSwap(chatemo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(emoid_, other->emoid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata chatemo::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void chatstring::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int chatstring::kIdFieldNumber;
const int chatstring::kStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

chatstring::chatstring()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultschatstring();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.chatstring)
}
chatstring::chatstring(const chatstring& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_str()) {
    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ccg_pb.chatstring)
}

void chatstring::SharedCtor() {
  _cached_size_ = 0;
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

chatstring::~chatstring() {
  // @@protoc_insertion_point(destructor:ccg_pb.chatstring)
  SharedDtor();
}

void chatstring::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void chatstring::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* chatstring::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const chatstring& chatstring::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultschatstring();
  return *internal_default_instance();
}

chatstring* chatstring::New(::google::protobuf::Arena* arena) const {
  chatstring* n = new chatstring;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void chatstring::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.chatstring)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*str_.UnsafeRawStringPointer())->clear();
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool chatstring::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.chatstring)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string str = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ccg_pb.chatstring.str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.chatstring)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.chatstring)
  return false;
#undef DO_
}

void chatstring::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.chatstring)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string str = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.chatstring.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.chatstring)
}

::google::protobuf::uint8* chatstring::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.chatstring)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string str = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.chatstring.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.chatstring)
  return target;
}

size_t chatstring::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.chatstring)
  size_t total_size = 0;

  if (has_str()) {
    // required string str = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t chatstring::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.chatstring)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string str = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void chatstring::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.chatstring)
  GOOGLE_DCHECK_NE(&from, this);
  const chatstring* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const chatstring>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.chatstring)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.chatstring)
    MergeFrom(*source);
  }
}

void chatstring::MergeFrom(const chatstring& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.chatstring)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_str();
      str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void chatstring::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.chatstring)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void chatstring::CopyFrom(const chatstring& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.chatstring)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool chatstring::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void chatstring::Swap(chatstring* other) {
  if (other == this) return;
  InternalSwap(other);
}
void chatstring::InternalSwap(chatstring* other) {
  using std::swap;
  str_.Swap(&other->str_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata chatstring::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void chattext_Respone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int chattext_Respone::kIdFieldNumber;
const int chattext_Respone::kTextidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

chattext_Respone::chattext_Respone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultschattext_Respone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.chattext_Respone)
}
chattext_Respone::chattext_Respone(const chattext_Respone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&textid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(textid_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.chattext_Respone)
}

void chattext_Respone::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&textid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(textid_));
}

chattext_Respone::~chattext_Respone() {
  // @@protoc_insertion_point(destructor:ccg_pb.chattext_Respone)
  SharedDtor();
}

void chattext_Respone::SharedDtor() {
}

void chattext_Respone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* chattext_Respone::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const chattext_Respone& chattext_Respone::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultschattext_Respone();
  return *internal_default_instance();
}

chattext_Respone* chattext_Respone::New(::google::protobuf::Arena* arena) const {
  chattext_Respone* n = new chattext_Respone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void chattext_Respone::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.chattext_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&textid_) -
        reinterpret_cast<char*>(&id_)) + sizeof(textid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool chattext_Respone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.chattext_Respone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 textid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_textid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &textid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.chattext_Respone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.chattext_Respone)
  return false;
#undef DO_
}

void chattext_Respone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.chattext_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 textid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->textid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.chattext_Respone)
}

::google::protobuf::uint8* chattext_Respone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.chattext_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 textid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->textid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.chattext_Respone)
  return target;
}

size_t chattext_Respone::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.chattext_Respone)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_textid()) {
    // required int32 textid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->textid());
  }

  return total_size;
}
size_t chattext_Respone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.chattext_Respone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 textid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->textid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void chattext_Respone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.chattext_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  const chattext_Respone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const chattext_Respone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.chattext_Respone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.chattext_Respone)
    MergeFrom(*source);
  }
}

void chattext_Respone::MergeFrom(const chattext_Respone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.chattext_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      textid_ = from.textid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void chattext_Respone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.chattext_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void chattext_Respone::CopyFrom(const chattext_Respone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.chattext_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool chattext_Respone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void chattext_Respone::Swap(chattext_Respone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void chattext_Respone::InternalSwap(chattext_Respone* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(textid_, other->textid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata chattext_Respone::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void chatemo_Respone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int chatemo_Respone::kIdFieldNumber;
const int chatemo_Respone::kEmoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

chatemo_Respone::chatemo_Respone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultschatemo_Respone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.chatemo_Respone)
}
chatemo_Respone::chatemo_Respone(const chatemo_Respone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&emoid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(emoid_));
  // @@protoc_insertion_point(copy_constructor:ccg_pb.chatemo_Respone)
}

void chatemo_Respone::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&emoid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(emoid_));
}

chatemo_Respone::~chatemo_Respone() {
  // @@protoc_insertion_point(destructor:ccg_pb.chatemo_Respone)
  SharedDtor();
}

void chatemo_Respone::SharedDtor() {
}

void chatemo_Respone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* chatemo_Respone::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const chatemo_Respone& chatemo_Respone::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultschatemo_Respone();
  return *internal_default_instance();
}

chatemo_Respone* chatemo_Respone::New(::google::protobuf::Arena* arena) const {
  chatemo_Respone* n = new chatemo_Respone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void chatemo_Respone::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.chatemo_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&emoid_) -
        reinterpret_cast<char*>(&id_)) + sizeof(emoid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool chatemo_Respone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.chatemo_Respone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 emoid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_emoid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &emoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.chatemo_Respone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.chatemo_Respone)
  return false;
#undef DO_
}

void chatemo_Respone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.chatemo_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 emoid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->emoid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.chatemo_Respone)
}

::google::protobuf::uint8* chatemo_Respone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.chatemo_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 emoid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->emoid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.chatemo_Respone)
  return target;
}

size_t chatemo_Respone::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.chatemo_Respone)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_emoid()) {
    // required int32 emoid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->emoid());
  }

  return total_size;
}
size_t chatemo_Respone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.chatemo_Respone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 emoid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->emoid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void chatemo_Respone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.chatemo_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  const chatemo_Respone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const chatemo_Respone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.chatemo_Respone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.chatemo_Respone)
    MergeFrom(*source);
  }
}

void chatemo_Respone::MergeFrom(const chatemo_Respone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.chatemo_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      emoid_ = from.emoid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void chatemo_Respone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.chatemo_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void chatemo_Respone::CopyFrom(const chatemo_Respone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.chatemo_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool chatemo_Respone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void chatemo_Respone::Swap(chatemo_Respone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void chatemo_Respone::InternalSwap(chatemo_Respone* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(emoid_, other->emoid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata chatemo_Respone::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void chatstring_Respone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int chatstring_Respone::kIdFieldNumber;
const int chatstring_Respone::kStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

chatstring_Respone::chatstring_Respone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_addressbook_2eproto::InitDefaultschatstring_Respone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccg_pb.chatstring_Respone)
}
chatstring_Respone::chatstring_Respone(const chatstring_Respone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_str()) {
    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ccg_pb.chatstring_Respone)
}

void chatstring_Respone::SharedCtor() {
  _cached_size_ = 0;
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

chatstring_Respone::~chatstring_Respone() {
  // @@protoc_insertion_point(destructor:ccg_pb.chatstring_Respone)
  SharedDtor();
}

void chatstring_Respone::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void chatstring_Respone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* chatstring_Respone::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const chatstring_Respone& chatstring_Respone::default_instance() {
  ::protobuf_addressbook_2eproto::InitDefaultschatstring_Respone();
  return *internal_default_instance();
}

chatstring_Respone* chatstring_Respone::New(::google::protobuf::Arena* arena) const {
  chatstring_Respone* n = new chatstring_Respone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void chatstring_Respone::Clear() {
// @@protoc_insertion_point(message_clear_start:ccg_pb.chatstring_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*str_.UnsafeRawStringPointer())->clear();
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool chatstring_Respone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccg_pb.chatstring_Respone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string str = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ccg_pb.chatstring_Respone.str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccg_pb.chatstring_Respone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccg_pb.chatstring_Respone)
  return false;
#undef DO_
}

void chatstring_Respone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccg_pb.chatstring_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string str = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.chatstring_Respone.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ccg_pb.chatstring_Respone)
}

::google::protobuf::uint8* chatstring_Respone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccg_pb.chatstring_Respone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string str = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ccg_pb.chatstring_Respone.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccg_pb.chatstring_Respone)
  return target;
}

size_t chatstring_Respone::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ccg_pb.chatstring_Respone)
  size_t total_size = 0;

  if (has_str()) {
    // required string str = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t chatstring_Respone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccg_pb.chatstring_Respone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string str = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void chatstring_Respone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccg_pb.chatstring_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  const chatstring_Respone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const chatstring_Respone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccg_pb.chatstring_Respone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccg_pb.chatstring_Respone)
    MergeFrom(*source);
  }
}

void chatstring_Respone::MergeFrom(const chatstring_Respone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccg_pb.chatstring_Respone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_str();
      str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void chatstring_Respone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccg_pb.chatstring_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void chatstring_Respone::CopyFrom(const chatstring_Respone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccg_pb.chatstring_Respone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool chatstring_Respone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void chatstring_Respone::Swap(chatstring_Respone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void chatstring_Respone::InternalSwap(chatstring_Respone* other) {
  using std::swap;
  str_.Swap(&other->str_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata chatstring_Respone::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ccg_pb

// @@protoc_insertion_point(global_scope)
